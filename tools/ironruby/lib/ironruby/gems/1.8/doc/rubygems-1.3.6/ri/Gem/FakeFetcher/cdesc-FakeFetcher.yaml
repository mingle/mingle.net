--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: data
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  name: last_request
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  name: paths
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: A fake Gem::RemoteFetcher for use in tests or to avoid real live HTTP requests
  when testing code that uses RubyGems.
- !ruby/struct:SM::Flow::P 
  body: "Example:"
- !ruby/struct:SM::Flow::VERB 
  body: |
      @fetcher = Gem::FakeFetcher.new
      @fetcher.data['http://gems.example.com/yaml'] = source_index.to_yaml
      Gem::RemoteFetcher.fetcher = @fetcher

      # invoke RubyGems code

      paths = @fetcher.paths
      assert_equal 'http://gems.example.com/yaml', paths.shift
      assert paths.empty?, paths.join(', ')

- !ruby/struct:SM::Flow::P 
  body: See RubyGems' tests for more examples of FakeFetcher.
constants: []
full_name: Gem::FakeFetcher
includes: []
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: download
- !ruby/object:RI::MethodSummary 
  name: fetch_path
- !ruby/object:RI::MethodSummary 
  name: fetch_size
- !ruby/object:RI::MethodSummary 
  name: find_data
- !ruby/object:RI::MethodSummary 
  name: open_uri_or_path
- !ruby/object:RI::MethodSummary 
  name: request
name: FakeFetcher
superclass: Object
